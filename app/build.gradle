apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.frogermcs.androiddevmetrics'
apply plugin: 'me.tatarka.retrolambda'


String APPLICATION_NAME = "projectfromscratch"

android {
    if (project.hasProperty("KEY_STORE_FILE")) {
        signingConfigs {
            release {
                storeFile file(KEY_STORE_FILE)
                storePassword KEY_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
            debug {
                storeFile file(KEY_STORE_FILE)
                storePassword KEY_STORE_PASSWORD
                keyAlias DEBUG_KEY_ALIAS
                keyPassword DEBUG_KEY_PASSWORD
//                keyAlias RELEASE_KEY_ALIAS
//                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "it.jdark.android." + APPLICATION_NAME
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

//    dataBinding {
//        enabled = true;
//    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-gson.pro'
            proguardFiles 'proguard-square-okhttp3.pro'
            proguardFiles 'proguard-square-okio.pro'
            proguardFiles 'proguard-square-retrofit2.pro'
            proguardFiles 'proguard-retrolambda.pro'
            proguardFiles 'proguard-butterknife-7.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            versionNameSuffix "-debug"
            // Set this flag and use the same signature key "release" to void some message about incompatible version
            // during install of debug and release version on the same phone
//            debuggable true
        }
    }

    productFlavors {
        flav1 {
            applicationId "it.jdark.android." + APPLICATION_NAME + ".demo"
            versionName "1.0-demo"
        }
        flav2 {
            applicationId "it.jdark.android." + APPLICATION_NAME + ".full"
            versionName "1.0-full"
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'mips', 'mips64', 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a', 'armeabi'
            universalApk true
        }
    }

    // map for the version code
    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 8, 'x86_64': 9]

    applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + defaultConfig.versionCode
        }
    }


    configurations {
        all*.exclude group: 'commons-logging', module: 'commons-logging'
        all*.exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        maxProcessCount 4
        javaMaxHeapSize "4g"
    }

}

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
}

project.ext {
    supportPackageVersion = '24.0.0'
    robolectricVersion = '3.0'
    mockitoVersion = '1.+'
    junitVersion = '4.12'
    espressoVersion = '2.2.2'
    espressoExtra = '0.5'
    daggerVersion = '2.2'
    retrofitVersion = '2.0.1'
    okHttp3Version = '3.2.0'
    javaxAnnotation = '10.0-b28'
    stethoVersion = '1.3.1'
    butterknifeVersion = '7.0.1'
    lombokVersion = '1.16.8'
    constraintLayoutVersion = '1.0.0-alpha3'
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${supportPackageVersion}"
    compile "com.android.support:design:${supportPackageVersion}"
    compile "com.android.support:support-annotations:${supportPackageVersion}"
    compile "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"

    // Test Resources  (Directory "test")
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.robolectric:robolectric:${robolectricVersion}"

    // Espresso (Directory "androidTest")
    androidTestCompile "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
    androidTestCompile "com.android.support.test:runner:${espressoExtra}"
    androidTestCompile "com.android.support.test:rules:${espressoExtra}"
    androidTestCompile "com.android.support:support-annotations:${supportPackageVersion}"

    // Butter Knight
    compile "com.jakewharton:butterknife:${butterknifeVersion}"

    // Retrofit
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.okhttp3:okhttp:${okHttp3Version}"
    // Dependency to fix annotation @Generated("org.jsonschema2pojo") that came from http://www.jsonschema2pojo.org/ if you used it to generate pojo class for json
    provided "org.glassfish:javax.annotation:${javaxAnnotation}"

    // Dependencies to debug Network call through chrome (chrome://inspect)
    debugCompile "com.facebook.stetho:stetho:${stethoVersion}"
    debugCompile "com.facebook.stetho:stetho-okhttp3:${stethoVersion}"

    // Dependency Injection with Dagger2
    compile "com.google.dagger:dagger:${daggerVersion}"
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
//    provided 'org.glassfish:javax.annotation:10.0-b28'
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'junit:junit:4.12'
}
